// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto";

export class MessageHeader {
  static encode(message: MessageHeader, writer: Writer): void {
    writer.uint32(8);
    writer.uint32(message.numRequiredSignatures);

    writer.uint32(16);
    writer.uint32(message.numReadonlySignedAccounts);

    writer.uint32(24);
    writer.uint32(message.numReadonlyUnsignedAccounts);
  }

  static decode(reader: Reader, length: i32): MessageHeader {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MessageHeader();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.numRequiredSignatures = reader.uint32();
          break;

        case 2:
          message.numReadonlySignedAccounts = reader.uint32();
          break;

        case 3:
          message.numReadonlyUnsignedAccounts = reader.uint32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  numRequiredSignatures: u32;
  numReadonlySignedAccounts: u32;
  numReadonlyUnsignedAccounts: u32;

  constructor(
    numRequiredSignatures: u32 = 0,
    numReadonlySignedAccounts: u32 = 0,
    numReadonlyUnsignedAccounts: u32 = 0
  ) {
    this.numRequiredSignatures = numRequiredSignatures;
    this.numReadonlySignedAccounts = numReadonlySignedAccounts;
    this.numReadonlyUnsignedAccounts = numReadonlyUnsignedAccounts;
  }
}
